/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.biz.ui.prototype;

import com.components.custom.ActionTask;
import java.awt.Component;
import org.biz.invoicesystem.entity.master.SKU;
import org.biz.invoicesystem.entity.transactions.SalesInvoiceLineItem;
import org.biz.invoicesystem.ui.list.master.SKUController;
import org.biz.invoicesystem.ui.list.master.SKULVUI;
import org.components.windows.UIController;

/**
 *
 * @author user
 */
public class SalesInvoiceLineDetailTableUI extends TableRowDetail  {
        
    private SalesInvoiceControler sic;
    private SalesInvoiceLineItem salesLine = new SalesInvoiceLineItem();
    

    /**
     * Creates new form SalesInvoiceLineDetailUI
     */
    public SalesInvoiceLineDetailTableUI() {
        initComponents();
//        setFocusable(true);
        initUI();
      

    }
    
    public Object getLineObject(){
        return salesLine;
    }
        
  
    
    public void setSalesInvoiceController(UIController  con ){
        sic = (SalesInvoiceControler) con;        
    }
   
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cButton2 = new org.components.controls.CButton();
        cButton1 = new org.components.controls.CButton();
        tTotal = new org.components.controls.CTextField();
        tPrice = new org.components.controls.CTextField();
        tQty = new org.components.controls.CTextField();
        tItemSearchTextComp = new com.components.custom.TextFieldWithPopUP<SKU>();
        cLabel1 = new org.components.controls.CLabel();
        cLabel2 = new org.components.controls.CLabel();

        setPreferredSize(new java.awt.Dimension(671, 47));

        cButton2.setText("X");
        cButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButton2ActionPerformed(evt);
            }
        });

        cButton1.setText("+");
        cButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButton1ActionPerformed(evt);
            }
        });

        cLabel1.setText("Price");

        cLabel2.setText("Qty");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tItemSearchTextComp, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tQty, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tItemSearchTextComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cButton1, tPrice, tQty, tTotal});

    }// </editor-fold>//GEN-END:initComponents

    private void cButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButton1ActionPerformed


        tableContainer.updateSelectedRow(salesLine);
        
//        mycontainer.add(new NewJPanel());
//        silineItem.add(this);
//        containerUI.addNewLineGotoNewLine();
        
        

        ///listener . addLineItem
    }//GEN-LAST:event_cButton1ActionPerformed

    private void cButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButton2ActionPerformed
        tableContainer.removeSelected();  
        
        
    }//GEN-LAST:event_cButton2ActionPerformed

    
    public void initUI() {
//        ItemController ic = new ItemController();
        super.initUI();
        SKUController  sk = new SKUController();
        tItemSearchTextComp.setListViewQueryManger(sk.getPopupQueryManger(), new SKULVUI());
        tItemSearchTextComp.setSelectedProperty("code");        
        tQty.setDocAction(new MyCalculator());
        
        tPrice.setDocAction(new MyCalculator());
        
        tQty.setActionTask(new ActionTask() {

            @Override
            public Component actionFired(Object source) {
                sic.onSalesInvoiceLineItemQTYChanged(SalesInvoiceLineDetailTableUI.this);
                return null;
            }
        });

        
        tPrice.setActionTask(new ActionTask() {

            @Override
            public Component actionFired(Object source) {
//                sic.onSalesInvoiceLineItemPriceChanged(SalesInvoiceLineDetailTableUI.this);
//                return containerUI.goToNextRowFirstComOrCreateNew();
                salesLine = (SalesInvoiceLineItem)panelToData();                
                sic.onSalesInvoiceLineItemQTYChanged(SalesInvoiceLineDetailTableUI.this);
                tableContainer.updateSelectedRow(salesLine);
                return tItemSearchTextComp;
                
            }
        });

        
        addToFocus(tItemSearchTextComp);        
        addToFocus(tQty);        
        addToFocus(tPrice);
        
        
        

    }

    public SalesInvoiceLineItem panelToData() {

        salesLine.setSku(tItemSearchTextComp.getSelectedObject());
        salesLine.setQty(tQty.getDoubleValue());
        salesLine.setPrice(tPrice.getDoubleValue());
        return salesLine;

    }

    public void setDataToPanel(Object data) {
        SalesInvoiceLineItem li = (SalesInvoiceLineItem) data;
        tItemSearchTextComp.setSelectedObject(li.getSku());
        tQty.setValueIfNotFocused(li.getQty());
        tPrice.setValueIfNotFocused(li.getPrice());
        tTotal.setValueIfNotFocused(li.getLineAmount());
        salesLine = li;
    }
    
     private class MyCalculator extends ActionTask{
        
        public void actionCall() {            
//             sic.onSalesInvoiceLineItemQTYChanged(SalesInvoiceLineDetailTableUI.this);
        }
        
        
        
    } 
   
   
     
    public void onRemoveLineItem(Object selectedObject) {
        sic.onRemoveLineItem((SalesInvoiceLineItem)selectedObject);
    } 

    public Object[] getTableData(Object row) {
        SalesInvoiceLineItem sl = (SalesInvoiceLineItem) row;
        SKU selItem = sl.getSku();
        return new Object[]{sl,sl.getId(), selItem != null ? sl.getSku().getCode() : "", selItem != null ? selItem.getExplainningSearchString(): "",
            sl.getQty(), sl.getPrice(), sl.getLineAmount()};
    }
    
    public void clearUI() {        
        tItemSearchTextComp.clear();
        tQty.clear();
        tPrice.clear();
        tTotal.clear();
        salesLine =null;
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.components.controls.CButton cButton1;
    private org.components.controls.CButton cButton2;
    private org.components.controls.CLabel cLabel1;
    private org.components.controls.CLabel cLabel2;
    private com.components.custom.TextFieldWithPopUP<SKU> tItemSearchTextComp;
    private org.components.controls.CTextField tPrice;
    private org.components.controls.CTextField tQty;
    private org.components.controls.CTextField tTotal;
    // End of variables declaration//GEN-END:variables

    

}
