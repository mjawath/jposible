/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.biz.ui.prototype;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import javax.swing.event.DocumentEvent;
import org.biz.invoicesystem.ui.list.master.ItemMasterUI;
import org.biz.invoicesystem.entity.transactions.SalesInvoiceLineItem;
import org.components.parent.Documents.DocumentListenerx;

/**
 *
 * @author user
 */
public class SalesInvoiceLineDetailUI extends GridDataLineDetailUI{
    
    private SalesInvoiceLineItemController silc;    
    /**
     * Creates new form SalesInvoiceLineDetailUI
     */
    public SalesInvoiceLineDetailUI() {
        initComponents();
        initUI();
    }
        
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mypanel = new org.components.containers.CPanel();
        tPrice = new org.components.controls.CTextField();
        tQty = new org.components.controls.CTextField();
        tTotal = new org.components.controls.CTextField();
        cButton1 = new org.components.controls.CButton();
        tItemSearchTextComp = new research.prototype.transaction.ItemPopup();

        cButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mypanelLayout = new javax.swing.GroupLayout(mypanel);
        mypanel.setLayout(mypanelLayout);
        mypanelLayout.setHorizontalGroup(
            mypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tItemSearchTextComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tQty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        mypanelLayout.setVerticalGroup(
            mypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mypanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tItemSearchTextComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        mypanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cButton1, tPrice, tQty, tTotal});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mypanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mypanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cButton1ActionPerformed

        //line items to sales line item
        //set the line item to sales invoice

        //        salesController.addLine();

//        mycontainer.add(new NewJPanel());
//        silineItem.add(this);
        containerUI.addNewToTable();
        
        

        ///listener . addLineItem
    }//GEN-LAST:event_cButton1ActionPerformed
    
    
    public void setUIToData(){
        
        SalesInvoiceLineItem sili =  new SalesInvoiceLineItem();
//        sili.setItem(tItemSearchTextComp.getDoubleValue());
        sili.setQty(tQty.getDoubleValue());
        sili.setPrice(tPrice.getDoubleValue());
        sili.setLineAmount(tTotal.getDoubleValue());
        
    }
    
    public void setDataToUI(Object data){
        SalesInvoiceLineItem li  = (SalesInvoiceLineItem)data;
//        tItemSearch.setObject(item);
        tQty.setValue(li.getQty());
        tPrice.setValue(li.getPrice());        
        tTotal.setValue(li.getLineAmount());        
    }
    
    public void initUI() {

        silc = new SalesInvoiceLineItemController();
        ItemMasterUI itemList =new ItemMasterUI();
        itemList.config();
        tItemSearchTextComp.setListOverView(itemList);

        tPrice.addDocumentListener(new MyCalculator());
        tQty.addDocumentListener(new MyCalculator());
        tQty.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                System.out.println("  qty " + ae.getID());
                try {
                    double qty = tQty.getDoubleValue();
                    silc.setQty(qty);
                    setUIToData();
                    setDataToUI(silc.getSili());
                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println(e.getMessage());
                }

            }
        });

        tQty.addFocusListener(new FocusAdapter() {

            public void focusLost(FocusEvent e) {
                System.out.println("-----------------------------------------------------");
                System.out.println("-----------------------------------------------------");
                System.out.println("-----------------------------------------------------");
                System.out.println("-----------------------------------------------------");
            }

        });

        tPrice.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                System.out.println("  setting price to price  " + ae.getID());
                try {
                    Double price = tPrice.getDoubleValue();
                    silc.setPrice(price);
                    setUIToData();

                } catch (Exception e) {

                }

            }
        });
//        tblLineItems.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//            
//            public void valueChanged(ListSelectionEvent e) {
//                
//                tblLineItems.getSelectedObject();
//                
////                setDataToUI(tQty);
//            }
//        });

    }

      private class ItemSearchDocList extends DocumentListenerx {

        public void action(DocumentEvent e) {
            System.out.println("printing what ever changed " + e);
//            itemController.findItem(tItemSearchTextComp.getText());]
            
            
            
            
        }

    }
      
     private class MyCalculator extends DocumentListenerx{
        
        public void action(DocumentEvent e) {
            
            System.out.println("setting data to line item "+e); 
            try {
//                salesController.calulateLineData();
                
            } catch (Exception ex) {
            
            }
            
        }
        
        
        
    }  
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.components.controls.CButton cButton1;
    private org.components.containers.CPanel mypanel;
    private research.prototype.transaction.ItemPopup tItemSearchTextComp;
    private org.components.controls.CTextField tPrice;
    private org.components.controls.CTextField tQty;
    private org.components.controls.CTextField tTotal;
    // End of variables declaration//GEN-END:variables
}
